// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/iam/admin/v1/iam.proto

// Protobuf Java Version: 4.26.1
package com.google.iam.admin.v1;

public interface ServiceAccountOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.iam.admin.v1.ServiceAccount)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The resource name of the service account in the following format:
   * `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
   *
   * Requests using `-` as a wildcard for the `PROJECT_ID` will infer the
   * project from the `account` and the `ACCOUNT` value can be the `email`
   * address or the `unique_id` of the service account.
   *
   * In responses the resource name will always be in the format
   * `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The resource name of the service account in the following format:
   * `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
   *
   * Requests using `-` as a wildcard for the `PROJECT_ID` will infer the
   * project from the `account` and the `ACCOUNT` value can be the `email`
   * address or the `unique_id` of the service account.
   *
   * In responses the resource name will always be in the format
   * `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * &#64;OutputOnly The id of the project that owns the service account.
   * </pre>
   *
   * <code>string project_id = 2 [json_name = "projectId"];</code>
   * @return The projectId.
   */
  java.lang.String getProjectId();
  /**
   * <pre>
   * &#64;OutputOnly The id of the project that owns the service account.
   * </pre>
   *
   * <code>string project_id = 2 [json_name = "projectId"];</code>
   * @return The bytes for projectId.
   */
  com.google.protobuf.ByteString
      getProjectIdBytes();

  /**
   * <pre>
   * &#64;OutputOnly The unique and stable id of the service account.
   * </pre>
   *
   * <code>string unique_id = 4 [json_name = "uniqueId"];</code>
   * @return The uniqueId.
   */
  java.lang.String getUniqueId();
  /**
   * <pre>
   * &#64;OutputOnly The unique and stable id of the service account.
   * </pre>
   *
   * <code>string unique_id = 4 [json_name = "uniqueId"];</code>
   * @return The bytes for uniqueId.
   */
  com.google.protobuf.ByteString
      getUniqueIdBytes();

  /**
   * <pre>
   * &#64;OutputOnly The email address of the service account.
   * </pre>
   *
   * <code>string email = 5 [json_name = "email"];</code>
   * @return The email.
   */
  java.lang.String getEmail();
  /**
   * <pre>
   * &#64;OutputOnly The email address of the service account.
   * </pre>
   *
   * <code>string email = 5 [json_name = "email"];</code>
   * @return The bytes for email.
   */
  com.google.protobuf.ByteString
      getEmailBytes();

  /**
   * <pre>
   * Optional. A user-specified name for the service account.
   * Must be less than or equal to 100 UTF-8 bytes.
   * </pre>
   *
   * <code>string display_name = 6 [json_name = "displayName"];</code>
   * @return The displayName.
   */
  java.lang.String getDisplayName();
  /**
   * <pre>
   * Optional. A user-specified name for the service account.
   * Must be less than or equal to 100 UTF-8 bytes.
   * </pre>
   *
   * <code>string display_name = 6 [json_name = "displayName"];</code>
   * @return The bytes for displayName.
   */
  com.google.protobuf.ByteString
      getDisplayNameBytes();

  /**
   * <pre>
   * Optional. Note: `etag` is an inoperable legacy field that is only returned
   * for backwards compatibility.
   * </pre>
   *
   * <code>bytes etag = 7 [json_name = "etag"];</code>
   * @return The etag.
   */
  com.google.protobuf.ByteString getEtag();

  /**
   * <pre>
   * &#64;OutputOnly. The OAuth2 client id for the service account.
   * This is used in conjunction with the OAuth2 clientconfig API to make
   * three legged OAuth2 (3LO) flows to access the data of Google users.
   * </pre>
   *
   * <code>string oauth2_client_id = 9 [json_name = "oauth2ClientId"];</code>
   * @return The oauth2ClientId.
   */
  java.lang.String getOauth2ClientId();
  /**
   * <pre>
   * &#64;OutputOnly. The OAuth2 client id for the service account.
   * This is used in conjunction with the OAuth2 clientconfig API to make
   * three legged OAuth2 (3LO) flows to access the data of Google users.
   * </pre>
   *
   * <code>string oauth2_client_id = 9 [json_name = "oauth2ClientId"];</code>
   * @return The bytes for oauth2ClientId.
   */
  com.google.protobuf.ByteString
      getOauth2ClientIdBytes();
}
